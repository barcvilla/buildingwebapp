body
{
	display: flex; // hacemos del body un flex container
	flex-direction: column; // cambiamos la direccion del flex
	font-size: 10px;
	background: rgb(149, 194, 215);
}

body span /* ejemplo de un selector descendiente apunta a cualquier elemento de un tipo especificado */
{
	/* declaraciones style - Seleccionamos cualquier elemento span que es descendiente del elemento body */
	/* esta sintaxis no usa combinators */
}

@font-face /* nos permite asignar un nombre personalizado para una familia de fonts que luego usamos en los styles */
{
	font-family: 'lakeshore' //valor para identificar el nombre personalizado de la font que usaremos
	// declaraciones src donde se ubican diferentes fonts files
	src: url('fonts/LAKESHOR-webfont.eot');
	src: url('fonts/LAKESHOR-webfont.eot?#iefix')format('embedded-opentype'),
			 url('fonts/LAKESHOR-webfont.woff')format('woff'),
			 url('fonts/LAKESHOR-webfont.ttf')format('truetype'),
			 url('fonts/LAKESHOR-webfont.svg#lakeshore')format('svg');
			 // declaraciones que modifican la presentacion de las fuentes
			 font-weight: normal;
			 font-style: normal;
}

html, body
{
	height: 100%;
}

.logo-text /* estilo para el logo */
{
	background: white;
	text-align: center;
	text-transform: uppercase;
	font-family: lakeshore;
	font-size: 37px;
}



/* Usamos un class selector (o atributo selector) */
body .thumbnail-title
{

}

/* Child selector (>): el elemento a ser afectado por la regla es el elemento de la derecha cuando tiene al de la izq. como padre */
/* ejemplo: modificamos los elementos span que son hijos de un elemento li */
li > span
{
	/* declaraciones style */
}

/* Sibling selector(~) Este selector apunta a elementos objetivos con el mismo padre  */
header ~ ul
{
	/* este selector apunta a cualquier elemento ul que es precedido por un header como padre pero este padre no necesita estar
	   inmediatamente antes del elemento. Ademas, mas de un elemento puede ser afectado
		 p.mitexto2 ~ p
		 {
		 		color : #990000;
		 }*/
}

li
{
	background: red;
}

<li class="thumbnail-item" id="barry-otter">
#barry-otter
{
	background: green;
}

/* Selector + */
li + li
{
	/* Este selector hacer referencia al elemento de la derecha cuando es inmediatamente precedido por el de la izquierda
	   ambos elementos deben compartir el mismo padre */
}
.a
{
	/* eliminamos el underline en los nombre */
	text-decoration: none;
}

.thumbnail-item + .thumbnail-item
{
	margin-top: 10px;
}
.thumbnail-list
{
	list-style: none;
	padding: 0;
	/* apply scrolling behavior */
	white-space: nowrap;
	overflow-x: auto; /* adiciona un scrollbar horizontal (eje x) */
}
.thumbnail-item
{
	background: blue;
	/* display: block;  el browser aplica un line break antes y despues de cada elemento */
  display: inline-block; /* coloca los elementos como display: block pero no aplica un line break */
	width: 120px;
	border: 1px solid rgb(100%, 100%, 100%, 0.8);
	border: 1px solid rgba(100%, 100%, 100%, 0.8);
}
.thumbnail-image
{
	display: block;
	width: 100%;
}
.thumbnail-title
{
  display: block;
  margin: 0;
  padding: 4px 10px;
  background: rgb(96, 125, 139);
  color: rgb(202, 238, 255);
  font-size: 18px;
}
.detail-image
{
	width: 90%;
}
